
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author damianchng
 */
public class MainScreen extends javax.swing.JFrame {

    private TennisPlayer user;
    private BST<TennisPlayer> bst;

    /**
     * Creates new form MainScreen
     */
    public MainScreen(TennisPlayer user) {
        //Create BST based on text file
        initComponents();
        this.user = user;
        showUser();
        Scanner in = null;
        try {
            in = new Scanner(new File("Accounts.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        bst = new BST<TennisPlayer>();
        while (in.hasNextLine()) {
            String input = in.nextLine();
            if (!input.equals(user.toString())) {
                String[] vars = input.split(" ");
                String name = vars[0].substring(0, vars[0].indexOf(":"));
                int level = 0;
                try{
                    String num = vars[2].substring(0, vars[2].indexOf(","));
                    level = Integer.parseInt(num);
                }catch (NumberFormatException e) {
                    continue;
                }
                Location location = null;
                if(vars[3].substring(0, vars[3].indexOf(",")).equals("WEST") || vars[3].substring(0, vars[3].indexOf(",")).equals("EAST")){
                    location = Location.getLocation(vars[3].substring(0, vars[3].indexOf(",")));
                }else{
                    continue;
                }
                Sex sex = null;
                if(vars[4].substring(0, vars[4].indexOf(",")).equals("Male") || vars[4].substring(0, vars[4].indexOf(",")).equals("Female")){
                    sex = Sex.getSex(vars[4].substring(0, vars[4].indexOf(",")));
                }else{
                    continue;
                }
                int age = 0;
                try{
                    age = Integer.parseInt(vars[5]);
                    if(age <= 0){
                        continue;
                    }
                }catch (NumberFormatException e) {
                    continue;
                }
                
                TennisPlayer add = new TennisPlayer(name, location, sex, age, level);
                bst.add(add);
            }
        }
        System.out.println(bst);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title = new javax.swing.JLabel();
        titleMain = new javax.swing.JLabel();
        txtUser = new javax.swing.JLabel();
        username = new javax.swing.JLabel();
        lblSearch = new javax.swing.JLabel();
        searchChoice = new javax.swing.JComboBox<>();
        btnSearch = new javax.swing.JButton();
        lblFind = new javax.swing.JLabel();
        findChoice = new javax.swing.JComboBox<>();
        btnFind = new javax.swing.JButton();
        functionsPanel = new javax.swing.JPanel();
        titleSub = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnSeeAll = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSize = new javax.swing.JButton();

        title.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("Tennis Matcher");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleMain.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        titleMain.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleMain.setText("Tennis Matcher");
        titleMain.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        txtUser.setText("User: ");

        username.setText("Example");

        lblSearch.setText("Search by: ");

        searchChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Level", "Sex", "Location", "Age" }));

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblFind.setText("Find:");

        findChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Best Player", "Worst Player", "Average Level" }));

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        titleSub.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        titleSub.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleSub.setText("Other Functions");

        btnDelete.setText("Delete Player");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setText("Add Friend");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSeeAll.setText("See All Players");
        btnSeeAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeeAllActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update Record");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit Profile");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSize.setText("Number of Players");
        btnSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSizeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout functionsPanelLayout = new javax.swing.GroupLayout(functionsPanel);
        functionsPanel.setLayout(functionsPanelLayout);
        functionsPanelLayout.setHorizontalGroup(
            functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleSub, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(functionsPanelLayout.createSequentialGroup()
                        .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 26, Short.MAX_VALUE)
                        .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSize)
                            .addComponent(btnSeeAll, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        functionsPanelLayout.setVerticalGroup(
            functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(functionsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleSub)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnAdd)
                    .addComponent(btnSeeAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnEdit)
                    .addComponent(btnSize))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleMain, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtUser)
                            .addComponent(lblSearch)
                            .addComponent(lblFind))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(findChoice, 0, 1, Short.MAX_VALUE)
                                    .addComponent(searchChoice, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnFind)
                                    .addComponent(btnSearch))))))
                .addGap(6, 6, 6))
            .addComponent(functionsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(titleMain)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUser)
                    .addComponent(username))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSearch)
                    .addComponent(searchChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFind)
                    .addComponent(findChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFind))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(functionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Searches BST based on level, location, sex, or age
        String input = searchChoice.getSelectedItem().toString();
        TennisPlayer opp = null;
        if (input.equals("Level")) {
            opp = bst.searchByLevel(user);
        } else if (input.equals("Location")) {
            opp = bst.searchByLocation(user);
        } else if (input.equals("Sex")) {
            opp = bst.searchBySex(user);
        } else {
            opp = bst.searchByAge(user);
        }
        if (opp == null) {
            JOptionPane.showMessageDialog(this, "No similar player found");
        } else {
            JOptionPane.showMessageDialog(this, "Similar player: " + opp);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        //Find best, average, or worst player
        String input = findChoice.getSelectedItem().toString();
        TennisPlayer opp = null;
        if (input.equals("Best Player")) {
            opp = bst.findBest();
        } else if (input.equals("Worst Player")) {
            opp = bst.findWorst();
        } else {
            double average = bst.findAverage();
            JOptionPane.showMessageDialog(this, "Average level is " + average);
            return;
        }
        if(opp == null){
            JOptionPane.showMessageDialog(this, "Player is nonexistant");
            return;
        }
        JOptionPane.showMessageDialog(this, "Player is " + opp);
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //Removes a player from BST
        TennisPlayer player = newPlayer(true);
        bst.delete(player);
        removeLine("Accounts.txt", player + "");
        System.out.println(bst);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void removeLine(String file, String lineToRemove) {
        //Removes a line from text file
        File current = new File(file);
        File temp = new File(current.getAbsolutePath() + ".txt");

        Scanner in = null;
        try {
            in = new Scanner(new File(file));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        PrintWriter out = null;
        try {
            out = new PrintWriter(new FileWriter(temp));
        } catch (IOException ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

        while (in.hasNextLine()) {
            String line = in.nextLine();    
            if (!line.equals(lineToRemove)) {
                out.println(line);
            }
        }
        in.close();
        out.close();
        current.delete();
        temp.renameTo(current);
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // Adds a player to BST
        TennisPlayer player = newPlayer(false);
        bst.add(player);
        Scanner in = null;
        try {
            in = new Scanner(new File("Accounts.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        PrintWriter out = null;
        try {
            out = new PrintWriter(new FileWriter("Accounts.txt", true));
        } catch (IOException ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        boolean exists = false;
        while(in.hasNextLine()){
            String input = in.nextLine();
            if(player.toString().equals(input)){
                exists = true;
            }
        }
        if(!exists){
            out.println(player);
        }
        out.close();
        System.out.println(bst);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSeeAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeeAllActionPerformed
        // Prints all players in order
        String arr[] = bst.getAllNodes();
        if(arr == null){
            return;
        }
        JList list = new JList(arr);
        JScrollPane pane = new JScrollPane(list);
        JPanel panel = new JPanel(); 
        panel.add(pane);
        pane.getViewport().add(list);
        JOptionPane.showMessageDialog(this, pane, "All Players", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_btnSeeAllActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // Update level/score with new match vs opponent - edit value in BST also
        TennisPlayer oldOpponent = newPlayer(true);
        boolean exists = false;
        Scanner in = null;
        try {
            in = new Scanner(new File("Accounts.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        while(in.hasNextLine()){
            String input = in.nextLine();
            if(oldOpponent.toString().equals(input)){
                exists = true;
            }
        }
        if(!exists){
            JOptionPane.showMessageDialog(this, "No player exists");
            return;
        }
        TennisPlayer newOpponent = new TennisPlayer(oldOpponent.getName(), oldOpponent.getLocation(), 
                oldOpponent.getSex(), oldOpponent.getAge(), oldOpponent.getLevel());
        TennisPlayer oldUser = new TennisPlayer(user.getName(), user.getLocation(), 
                user.getSex(), user.getAge(), user.getLevel());
        int num = JOptionPane.showConfirmDialog(this, "Did you win");
        if(num == JOptionPane.YES_OPTION){
            user.updateRecord(true, newOpponent);
        }else if(num == JOptionPane.NO_OPTION){
            user.updateRecord(false, newOpponent);
        }else{
            return;
        }
        bst.edit(oldOpponent, newOpponent);
        removeLine("Accounts.txt", oldUser + "");
        removeLine("Accounts.txt", oldOpponent + "");
        
        PrintWriter out = null;
        try {
            out = new PrintWriter(new FileWriter("Accounts.txt", true));
        } catch (IOException ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        out.println(user);
        out.println(newOpponent);
        out.close();
        showUser();
        System.out.println(bst);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        //Edits user profile
        removeLine("Accounts.txt", user + "");
        JOptionPane.showMessageDialog(this, "New Player");
        user = newPlayer(true);
        
        PrintWriter out = null;
        try {
            out = new PrintWriter(new FileWriter("Accounts.txt", true));
        } catch (IOException ex) {
            Logger.getLogger(MainScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        out.println(user);
        out.close();
        showUser();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSizeActionPerformed
        // How many players there are in program
        JOptionPane.showMessageDialog(this, "Number of players is: " + bst.size());
    }//GEN-LAST:event_btnSizeActionPerformed

    private void showUser() {
        // Change user info display
        username.setText(user + "");
    }
    
    private TennisPlayer newPlayer(boolean getLevel){
        //Gets all info to create user
        String name = JOptionPane.showInputDialog("Enter name:");
        int age = 0;
        while (true) {
            try {
                age = Integer.parseInt(JOptionPane.showInputDialog("Enter age:"));
                if (age > 0) {
                    break;
                } else {
                    JOptionPane.showMessageDialog(this, "You didn't type a real age");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "You didn't type a real age");
            }
        }
        Sex sex = null;
        while (true) {
            String input = JOptionPane.showInputDialog("Enter sex (Male-Female):");
            if (input.equals("Male") || input.equals("Female")) {
                sex = Sex.getSex(input);
                break;
            } else {
                JOptionPane.showMessageDialog(this, "You didn't type a real sex");
            }
        }
        Location location = null;
        while (true) {
            String input = JOptionPane.showInputDialog("Enter location (WEST-EAST):");
            if (input.equals("EAST") || input.equals("WEST")) {
                location = Location.getLocation(input);
                break;
            }else{
                JOptionPane.showMessageDialog(this, "You didn't type a real location");
            }
        }
        if(getLevel){
            int level = 0;
            while (true) {
                try {
                    level = Integer.parseInt(JOptionPane.showInputDialog("Enter level:"));
                    if (level > 0 && level < 11) {
                        break;
                    } else {
                        JOptionPane.showMessageDialog(this, "You didn't type a real level");
                    }
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "You didn't type a real level");
                }
            }
            return new TennisPlayer(name, location, sex, age, level);
        }
        return new TennisPlayer(name, location, sex, age);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSeeAll;
    private javax.swing.JButton btnSize;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> findChoice;
    private javax.swing.JPanel functionsPanel;
    private javax.swing.JLabel lblFind;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JComboBox<String> searchChoice;
    private javax.swing.JLabel title;
    private javax.swing.JLabel titleMain;
    private javax.swing.JLabel titleSub;
    private javax.swing.JLabel txtUser;
    private javax.swing.JLabel username;
    // End of variables declaration//GEN-END:variables
}
